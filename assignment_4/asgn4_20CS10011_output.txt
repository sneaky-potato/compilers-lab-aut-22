-------------------- Parsing --------------------


-------- Parsing Line No. 2 --------

-------- Parsing Line No. 3 --------

-------- Parsing Line No. 4 --------

-------- Parsing Line No. 5 --------

-------- Parsing Line No. 6 --------

-------- Parsing Line No. 7 --------

-------- Parsing Line No. 8 --------

-------- Parsing Line No. 9 --------

-------- Parsing Line No. 10 --------

-------- Parsing Line No. 11 --------

-------- Parsing Line No. 12 --------

-------- Parsing Line No. 13 --------
INFO [Line 13] : type specifier --> int
INFO [Line 13] : declaration_specifiers_opt --> epsilon
INFO [Line 13] : declaration_specifiers --> type_specifier declaration_specifiers_opt
INFO [Line 13] : pointer_opt --> epsilon
INFO [Line 13] : direct declarator --> identifier
INFO [Line 13] : identifier_list_opt --> epsilon
INFO [Line 13] : direct declarator --> direct declarator (identifier list)
INFO [Line 13] : declarator --> pointer_opt direct_declarator
INFO [Line 13] : declaration_list_opt --> epsilon

-------- Parsing Line No. 14 --------
INFO [Line 14] : type specifier --> int
INFO [Line 14] : declaration_specifiers_opt --> epsilon
INFO [Line 14] : declaration_specifiers --> type_specifier declaration_specifiers_opt
INFO [Line 14] : pointer_opt --> epsilon
INFO [Line 14] : direct declarator --> identifier
INFO [Line 14] : declarator --> pointer_opt direct_declarator
INFO [Line 14] : init_declarator --> declarator
INFO [Line 14] : init_declarator_list --> init_declarator
INFO [Line 14] : pointer_opt --> epsilon
INFO [Line 14] : direct declarator --> identifier
INFO [Line 14] : declarator --> pointer_opt direct_declarator
INFO [Line 14] : init_declarator --> declarator
INFO [Line 14] : init_declarator_list --> init_declarator_list , init_declarator
INFO [Line 14] : pointer_opt --> epsilon
INFO [Line 14] : direct declarator --> identifier
INFO [Line 14] : declarator --> pointer_opt direct_declarator
INFO [Line 14] : init_declarator --> declarator
INFO [Line 14] : init_declarator_list --> init_declarator_list , init_declarator
INFO [Line 14] : pointer_opt --> epsilon
INFO [Line 14] : direct declarator --> identifier
INFO [Line 14] : declarator --> pointer_opt direct_declarator
INFO [Line 14] : init_declarator --> declarator
INFO [Line 14] : init_declarator_list --> init_declarator_list , init_declarator
INFO [Line 14] : init_declarator_list_opt --> init_declarator_list
INFO [Line 14] : declaration --> declaration specifiers init_declarator_list_opt
INFO [Line 14] : block item --> declaration
INFO [Line 14] : block item list --> block item

-------- Parsing Line No. 15 --------
INFO [Line 15] : type specifier --> char
INFO [Line 15] : declaration_specifiers_opt --> epsilon
INFO [Line 15] : declaration_specifiers --> type_specifier declaration_specifiers_opt
INFO [Line 15] : pointer_opt --> epsilon
INFO [Line 15] : direct declarator --> identifier
INFO [Line 15] : type_qualifier_list_opt --> epsilon
INFO [Line 15] : assignment_expression_opt --> epsilon
INFO [Line 15] : direct declarator --> direct declarator [type qualifier? assignment expression?]
INFO [Line 15] : declarator --> pointer_opt direct_declarator
INFO [Line 15] : primary-expression --> string_literal
INFO [Line 15] : postfix-expression --> primary_expression
INFO [Line 15] : unary_expression --> postfix_expression
INFO [Line 15] : cast_expression --> unary_expression
INFO [Line 15] : multiplicative_expression --> cast_expression
INFO [Line 15] : additive_expression --> multiplicative_expression
INFO [Line 15] : shift_expression --> additive_expression
INFO [Line 15] : relational_expression --> shift_expression
INFO [Line 15] : equality expression --> relational expression
INFO [Line 15] : and expression --> equality expression
INFO [Line 15] : exclusive or expression --> and expression
INFO [Line 15] : inclusive or expression --> exclusive or expression
INFO [Line 15] : logical and expression --> inclusive or expression
INFO [Line 15] : logical or expression --> logical and expression
INFO [Line 15] : conditional expression --> logical or expression
INFO [Line 15] : assignment expression --> conditional expression
INFO [Line 15] : initializer --> assignment expression
INFO [Line 15] : init_declarator --> declarator = initializer
INFO [Line 15] : init_declarator_list --> init_declarator
INFO [Line 15] : init_declarator_list_opt --> init_declarator_list
INFO [Line 15] : declaration --> declaration specifiers init_declarator_list_opt
INFO [Line 15] : block item --> declaration
INFO [Line 15] : block item list --> block item list block item

-------- Parsing Line No. 16 --------
INFO [Line 16] : type specifier --> char
INFO [Line 16] : declaration_specifiers_opt --> epsilon
INFO [Line 16] : declaration_specifiers --> type_specifier declaration_specifiers_opt
INFO [Line 16] : pointer_opt --> epsilon
INFO [Line 16] : direct declarator --> identifier
INFO [Line 16] : declarator --> pointer_opt direct_declarator
INFO [Line 16] : primary-expression --> character_constant
INFO [Line 16] : postfix-expression --> primary_expression
INFO [Line 16] : unary_expression --> postfix_expression
INFO [Line 16] : cast_expression --> unary_expression
INFO [Line 16] : multiplicative_expression --> cast_expression
INFO [Line 16] : additive_expression --> multiplicative_expression
INFO [Line 16] : shift_expression --> additive_expression
INFO [Line 16] : relational_expression --> shift_expression
INFO [Line 16] : equality expression --> relational expression
INFO [Line 16] : and expression --> equality expression
INFO [Line 16] : exclusive or expression --> and expression
INFO [Line 16] : inclusive or expression --> exclusive or expression
INFO [Line 16] : logical and expression --> inclusive or expression
INFO [Line 16] : logical or expression --> logical and expression
INFO [Line 16] : conditional expression --> logical or expression
INFO [Line 16] : assignment expression --> conditional expression
INFO [Line 16] : initializer --> assignment expression
INFO [Line 16] : init_declarator --> declarator = initializer
INFO [Line 16] : init_declarator_list --> init_declarator
INFO [Line 16] : init_declarator_list_opt --> init_declarator_list
INFO [Line 16] : declaration --> declaration specifiers init_declarator_list_opt
INFO [Line 16] : block item --> declaration
INFO [Line 16] : block item list --> block item list block item

-------- Parsing Line No. 17 --------
INFO [Line 17] : type specifier --> float
INFO [Line 17] : declaration_specifiers_opt --> epsilon
INFO [Line 17] : declaration_specifiers --> type_specifier declaration_specifiers_opt
INFO [Line 17] : pointer_opt --> epsilon
INFO [Line 17] : direct declarator --> identifier
INFO [Line 17] : declarator --> pointer_opt direct_declarator
INFO [Line 17] : primary-expression --> integer constant
INFO [Line 17] : postfix-expression --> primary_expression
INFO [Line 17] : unary_expression --> postfix_expression
INFO [Line 17] : cast_expression --> unary_expression
INFO [Line 17] : multiplicative_expression --> cast_expression
INFO [Line 17] : additive_expression --> multiplicative_expression
INFO [Line 17] : shift_expression --> additive_expression
INFO [Line 17] : relational_expression --> shift_expression
INFO [Line 17] : equality expression --> relational expression
INFO [Line 17] : and expression --> equality expression
INFO [Line 17] : exclusive or expression --> and expression
INFO [Line 17] : inclusive or expression --> exclusive or expression
INFO [Line 17] : logical and expression --> inclusive or expression
INFO [Line 17] : logical or expression --> logical and expression
INFO [Line 17] : conditional expression --> logical or expression
INFO [Line 17] : assignment expression --> conditional expression
INFO [Line 17] : initializer --> assignment expression
INFO [Line 17] : init_declarator --> declarator = initializer
INFO [Line 17] : init_declarator_list --> init_declarator
INFO [Line 17] : init_declarator_list_opt --> init_declarator_list
INFO [Line 17] : declaration --> declaration specifiers init_declarator_list_opt
INFO [Line 17] : block item --> declaration
INFO [Line 17] : block item list --> block item list block item

-------- Parsing Line No. 18 --------
INFO [Line 18] : primary-expression --> identifier
INFO [Line 18] : postfix-expression --> primary_expression
INFO [Line 18] : unary_expression --> postfix_expression
INFO [Line 18] : assignment operator --> =
INFO [Line 18] : primary-expression --> integer constant
INFO [Line 18] : postfix-expression --> primary_expression
INFO [Line 18] : unary_expression --> postfix_expression
INFO [Line 18] : cast_expression --> unary_expression
INFO [Line 18] : multiplicative_expression --> cast_expression
INFO [Line 18] : additive_expression --> multiplicative_expression
INFO [Line 18] : shift_expression --> additive_expression
INFO [Line 18] : relational_expression --> shift_expression
INFO [Line 18] : equality expression --> relational expression
INFO [Line 18] : and expression --> equality expression
INFO [Line 18] : exclusive or expression --> and expression
INFO [Line 18] : inclusive or expression --> exclusive or expression
INFO [Line 18] : logical and expression --> inclusive or expression
INFO [Line 18] : logical or expression --> logical and expression
INFO [Line 18] : conditional expression --> logical or expression
INFO [Line 18] : assignment expression --> conditional expression
INFO [Line 18] : assignment expression --> unary_expression assign_op assignment_expression
INFO [Line 18] : expression --> assignment expression
INFO [Line 18] : expression_opt --> expression
INFO [Line 18] : primary-expression --> identifier
INFO [Line 18] : postfix-expression --> primary_expression
INFO [Line 18] : unary_expression --> postfix_expression
INFO [Line 18] : cast_expression --> unary_expression
INFO [Line 18] : multiplicative_expression --> cast_expression
INFO [Line 18] : additive_expression --> multiplicative_expression
INFO [Line 18] : shift_expression --> additive_expression
INFO [Line 18] : relational_expression --> shift_expression
INFO [Line 18] : primary-expression --> integer constant
INFO [Line 18] : postfix-expression --> primary_expression
INFO [Line 18] : unary_expression --> postfix_expression
INFO [Line 18] : cast_expression --> unary_expression
INFO [Line 18] : multiplicative_expression --> cast_expression
INFO [Line 18] : additive_expression --> multiplicative_expression
INFO [Line 18] : shift_expression --> additive_expression
INFO [Line 18] : relational expression --> relational expression < shift expression
INFO [Line 18] : equality expression --> relational expression
INFO [Line 18] : and expression --> equality expression
INFO [Line 18] : exclusive or expression --> and expression
INFO [Line 18] : inclusive or expression --> exclusive or expression
INFO [Line 18] : logical and expression --> inclusive or expression
INFO [Line 18] : logical or expression --> logical and expression
INFO [Line 18] : conditional expression --> logical or expression
INFO [Line 18] : assignment expression --> conditional expression
INFO [Line 18] : expression --> assignment expression
INFO [Line 18] : expression_opt --> expression
INFO [Line 18] : primary-expression --> identifier
INFO [Line 18] : postfix-expression --> primary_expression
INFO [Line 18] : postfix-expression --> postfix_expression++
INFO [Line 18] : unary_expression --> postfix_expression
INFO [Line 18] : cast_expression --> unary_expression
INFO [Line 18] : multiplicative_expression --> cast_expression
INFO [Line 18] : additive_expression --> multiplicative_expression
INFO [Line 18] : shift_expression --> additive_expression
INFO [Line 18] : relational_expression --> shift_expression
INFO [Line 18] : equality expression --> relational expression
INFO [Line 18] : and expression --> equality expression
INFO [Line 18] : exclusive or expression --> and expression
INFO [Line 18] : inclusive or expression --> exclusive or expression
INFO [Line 18] : logical and expression --> inclusive or expression
INFO [Line 18] : logical or expression --> logical and expression
INFO [Line 18] : conditional expression --> logical or expression
INFO [Line 18] : assignment expression --> conditional expression
INFO [Line 18] : expression --> assignment expression
INFO [Line 18] : expression_opt --> expression

-------- Parsing Line No. 19 --------
INFO [Line 19] : primary-expression --> identifier
INFO [Line 19] : postfix-expression --> primary_expression
INFO [Line 19] : unary_expression --> postfix_expression
INFO [Line 19] : cast_expression --> unary_expression
INFO [Line 19] : multiplicative_expression --> cast_expression
INFO [Line 19] : additive_expression --> multiplicative_expression
INFO [Line 19] : shift_expression --> additive_expression
INFO [Line 19] : relational_expression --> shift_expression
INFO [Line 19] : primary-expression --> integer constant
INFO [Line 19] : postfix-expression --> primary_expression
INFO [Line 19] : unary_expression --> postfix_expression
INFO [Line 19] : cast_expression --> unary_expression
INFO [Line 19] : multiplicative_expression --> cast_expression
INFO [Line 19] : additive_expression --> multiplicative_expression
INFO [Line 19] : shift_expression --> additive_expression
INFO [Line 19] : relational expression --> relational expression < shift expression
INFO [Line 19] : equality expression --> relational expression
INFO [Line 19] : and expression --> equality expression
INFO [Line 19] : exclusive or expression --> and expression
INFO [Line 19] : inclusive or expression --> exclusive or expression
INFO [Line 19] : logical and expression --> inclusive or expression
INFO [Line 19] : logical or expression --> logical and expression
INFO [Line 19] : conditional expression --> logical or expression
INFO [Line 19] : assignment expression --> conditional expression
INFO [Line 19] : expression --> assignment expression

-------- Parsing Line No. 20 --------
INFO [Line 20] : primary-expression --> identifier
INFO [Line 20] : postfix-expression --> primary_expression
INFO [Line 20] : primary-expression --> string_literal
INFO [Line 20] : postfix-expression --> primary_expression
INFO [Line 20] : unary_expression --> postfix_expression
INFO [Line 20] : cast_expression --> unary_expression
INFO [Line 20] : multiplicative_expression --> cast_expression
INFO [Line 20] : additive_expression --> multiplicative_expression
INFO [Line 20] : shift_expression --> additive_expression
INFO [Line 20] : relational_expression --> shift_expression
INFO [Line 20] : equality expression --> relational expression
INFO [Line 20] : and expression --> equality expression
INFO [Line 20] : exclusive or expression --> and expression
INFO [Line 20] : inclusive or expression --> exclusive or expression
INFO [Line 20] : logical and expression --> inclusive or expression
INFO [Line 20] : logical or expression --> logical and expression
INFO [Line 20] : conditional expression --> logical or expression
INFO [Line 20] : assignment expression --> conditional expression
INFO [Line 20] : argument_expression_list --> assignment_expression
INFO [Line 20] : primary-expression --> identifier
INFO [Line 20] : postfix-expression --> primary_expression
INFO [Line 20] : unary_expression --> postfix_expression
INFO [Line 20] : cast_expression --> unary_expression
INFO [Line 20] : multiplicative_expression --> cast_expression
INFO [Line 20] : additive_expression --> multiplicative_expression
INFO [Line 20] : shift_expression --> additive_expression
INFO [Line 20] : relational_expression --> shift_expression
INFO [Line 20] : equality expression --> relational expression
INFO [Line 20] : and expression --> equality expression
INFO [Line 20] : exclusive or expression --> and expression
INFO [Line 20] : inclusive or expression --> exclusive or expression
INFO [Line 20] : logical and expression --> inclusive or expression
INFO [Line 20] : logical or expression --> logical and expression
INFO [Line 20] : conditional expression --> logical or expression
INFO [Line 20] : assignment expression --> conditional expression
INFO [Line 20] : argument_list , expression list
INFO [Line 20] : postfix-expression --> postfix_expression(argument_expression_list)
INFO [Line 20] : unary_expression --> postfix_expression
INFO [Line 20] : cast_expression --> unary_expression
INFO [Line 20] : multiplicative_expression --> cast_expression
INFO [Line 20] : additive_expression --> multiplicative_expression
INFO [Line 20] : shift_expression --> additive_expression
INFO [Line 20] : relational_expression --> shift_expression
INFO [Line 20] : equality expression --> relational expression
INFO [Line 20] : and expression --> equality expression
INFO [Line 20] : exclusive or expression --> and expression
INFO [Line 20] : inclusive or expression --> exclusive or expression
INFO [Line 20] : logical and expression --> inclusive or expression
INFO [Line 20] : logical or expression --> logical and expression
INFO [Line 20] : conditional expression --> logical or expression
INFO [Line 20] : assignment expression --> conditional expression
INFO [Line 20] : expression --> assignment expression
INFO [Line 20] : expression_opt --> expression
INFO [Line 20] : expression statement
INFO [Line 20] : statement --> expression statement
INFO [Line 20] : block item --> statement
INFO [Line 20] : block item list --> block item

-------- Parsing Line No. 21 --------
INFO [Line 21] : block_item_list_opt --> block_item_list
INFO [Line 21] : compound statement --> {block item list?}
INFO [Line 21] : statement --> compound statement

-------- Parsing Line No. 22 --------
INFO [Line 22] : selection statement --> if
INFO [Line 22] : statement --> selection statement
INFO [Line 22] : block item --> statement
INFO [Line 22] : block item list --> block item
INFO [Line 22] : block_item_list_opt --> block_item_list
INFO [Line 22] : compound statement --> {block item list?}
INFO [Line 22] : statement --> compound statement
INFO [Line 22] : iteration statement --> for
INFO [Line 22] : statement --> iteration statement
INFO [Line 22] : block item --> statement
INFO [Line 22] : block item list --> block item list block item

-------- Parsing Line No. 23 --------

-------- Parsing Line No. 24 --------
INFO [Line 24] : type specifier --> int
INFO [Line 24] : declaration_specifiers_opt --> epsilon
INFO [Line 24] : declaration_specifiers --> type_specifier declaration_specifiers_opt
INFO [Line 24] : pointer_opt --> epsilon
INFO [Line 24] : direct declarator --> identifier
INFO [Line 24] : type_qualifier_list_opt --> epsilon
INFO [Line 24] : assignment_expression_opt --> epsilon
INFO [Line 24] : direct declarator --> direct declarator [type qualifier? assignment expression?]
INFO [Line 24] : declarator --> pointer_opt direct_declarator
INFO [Line 24] : designation_opt --> epsilon
INFO [Line 24] : primary-expression --> integer constant
INFO [Line 24] : postfix-expression --> primary_expression
INFO [Line 24] : unary_expression --> postfix_expression
INFO [Line 24] : cast_expression --> unary_expression
INFO [Line 24] : multiplicative_expression --> cast_expression
INFO [Line 24] : additive_expression --> multiplicative_expression
INFO [Line 24] : shift_expression --> additive_expression
INFO [Line 24] : relational_expression --> shift_expression
INFO [Line 24] : equality expression --> relational expression
INFO [Line 24] : and expression --> equality expression
INFO [Line 24] : exclusive or expression --> and expression
INFO [Line 24] : inclusive or expression --> exclusive or expression
INFO [Line 24] : logical and expression --> inclusive or expression
INFO [Line 24] : logical or expression --> logical and expression
INFO [Line 24] : conditional expression --> logical or expression
INFO [Line 24] : assignment expression --> conditional expression
INFO [Line 24] : initializer --> assignment expression
INFO [Line 24] : initializer list --> designation? initializer
INFO [Line 24] : designation_opt --> epsilon
INFO [Line 24] : primary-expression --> integer constant
INFO [Line 24] : postfix-expression --> primary_expression
INFO [Line 24] : unary_expression --> postfix_expression
INFO [Line 24] : cast_expression --> unary_expression
INFO [Line 24] : multiplicative_expression --> cast_expression
INFO [Line 24] : additive_expression --> multiplicative_expression
INFO [Line 24] : shift_expression --> additive_expression
INFO [Line 24] : relational_expression --> shift_expression
INFO [Line 24] : equality expression --> relational expression
INFO [Line 24] : and expression --> equality expression
INFO [Line 24] : exclusive or expression --> and expression
INFO [Line 24] : inclusive or expression --> exclusive or expression
INFO [Line 24] : logical and expression --> inclusive or expression
INFO [Line 24] : logical or expression --> logical and expression
INFO [Line 24] : conditional expression --> logical or expression
INFO [Line 24] : assignment expression --> conditional expression
INFO [Line 24] : initializer --> assignment expression
INFO [Line 24] : initializer list --> initializer list , designation? initializer
INFO [Line 24] : designation_opt --> epsilon
INFO [Line 24] : primary-expression --> integer constant
INFO [Line 24] : postfix-expression --> primary_expression
INFO [Line 24] : unary_expression --> postfix_expression
INFO [Line 24] : cast_expression --> unary_expression
INFO [Line 24] : multiplicative_expression --> cast_expression
INFO [Line 24] : additive_expression --> multiplicative_expression
INFO [Line 24] : shift_expression --> additive_expression
INFO [Line 24] : relational_expression --> shift_expression
INFO [Line 24] : equality expression --> relational expression
INFO [Line 24] : and expression --> equality expression
INFO [Line 24] : exclusive or expression --> and expression
INFO [Line 24] : inclusive or expression --> exclusive or expression
INFO [Line 24] : logical and expression --> inclusive or expression
INFO [Line 24] : logical or expression --> logical and expression
INFO [Line 24] : conditional expression --> logical or expression
INFO [Line 24] : assignment expression --> conditional expression
INFO [Line 24] : initializer --> assignment expression
INFO [Line 24] : initializer list --> initializer list , designation? initializer
INFO [Line 24] : designation_opt --> epsilon
INFO [Line 24] : primary-expression --> integer constant
INFO [Line 24] : postfix-expression --> primary_expression
INFO [Line 24] : unary_expression --> postfix_expression
INFO [Line 24] : cast_expression --> unary_expression
INFO [Line 24] : multiplicative_expression --> cast_expression
INFO [Line 24] : additive_expression --> multiplicative_expression
INFO [Line 24] : shift_expression --> additive_expression
INFO [Line 24] : relational_expression --> shift_expression
INFO [Line 24] : equality expression --> relational expression
INFO [Line 24] : and expression --> equality expression
INFO [Line 24] : exclusive or expression --> and expression
INFO [Line 24] : inclusive or expression --> exclusive or expression
INFO [Line 24] : logical and expression --> inclusive or expression
INFO [Line 24] : logical or expression --> logical and expression
INFO [Line 24] : conditional expression --> logical or expression
INFO [Line 24] : assignment expression --> conditional expression
INFO [Line 24] : initializer --> assignment expression
INFO [Line 24] : initializer list --> initializer list , designation? initializer
INFO [Line 24] : designation_opt --> epsilon
INFO [Line 24] : primary-expression --> integer constant
INFO [Line 24] : postfix-expression --> primary_expression
INFO [Line 24] : unary_expression --> postfix_expression
INFO [Line 24] : cast_expression --> unary_expression
INFO [Line 24] : multiplicative_expression --> cast_expression
INFO [Line 24] : additive_expression --> multiplicative_expression
INFO [Line 24] : shift_expression --> additive_expression
INFO [Line 24] : relational_expression --> shift_expression
INFO [Line 24] : equality expression --> relational expression
INFO [Line 24] : and expression --> equality expression
INFO [Line 24] : exclusive or expression --> and expression
INFO [Line 24] : inclusive or expression --> exclusive or expression
INFO [Line 24] : logical and expression --> inclusive or expression
INFO [Line 24] : logical or expression --> logical and expression
INFO [Line 24] : conditional expression --> logical or expression
INFO [Line 24] : assignment expression --> conditional expression
INFO [Line 24] : initializer --> assignment expression
INFO [Line 24] : initializer list --> initializer list , designation? initializer
INFO [Line 24] : designation_opt --> epsilon
INFO [Line 24] : primary-expression --> integer constant
INFO [Line 24] : postfix-expression --> primary_expression
INFO [Line 24] : unary_expression --> postfix_expression
INFO [Line 24] : cast_expression --> unary_expression
INFO [Line 24] : multiplicative_expression --> cast_expression
INFO [Line 24] : additive_expression --> multiplicative_expression
INFO [Line 24] : shift_expression --> additive_expression
INFO [Line 24] : relational_expression --> shift_expression
INFO [Line 24] : equality expression --> relational expression
INFO [Line 24] : and expression --> equality expression
INFO [Line 24] : exclusive or expression --> and expression
INFO [Line 24] : inclusive or expression --> exclusive or expression
INFO [Line 24] : logical and expression --> inclusive or expression
INFO [Line 24] : logical or expression --> logical and expression
INFO [Line 24] : conditional expression --> logical or expression
INFO [Line 24] : assignment expression --> conditional expression
INFO [Line 24] : initializer --> assignment expression
INFO [Line 24] : initializer list --> initializer list , designation? initializer
INFO [Line 24] : initializer --> {initializer list}
INFO [Line 24] : init_declarator --> declarator = initializer
INFO [Line 24] : init_declarator_list --> init_declarator
INFO [Line 24] : init_declarator_list_opt --> init_declarator_list
INFO [Line 24] : declaration --> declaration specifiers init_declarator_list_opt
INFO [Line 24] : block item --> declaration
INFO [Line 24] : block item list --> block item list block item

-------- Parsing Line No. 25 --------
INFO [Line 25] : type specifier --> int
INFO [Line 25] : declaration_specifiers_opt --> epsilon
INFO [Line 25] : declaration_specifiers --> type_specifier declaration_specifiers_opt
INFO [Line 25] : pointer_opt --> epsilon
INFO [Line 25] : direct declarator --> identifier
INFO [Line 25] : declarator --> pointer_opt direct_declarator
INFO [Line 25] : primary-expression --> identifier
INFO [Line 25] : postfix-expression --> primary_expression
INFO [Line 25] : unary_expression --> postfix_expression
INFO [Line 25] : cast_expression --> unary_expression
INFO [Line 25] : multiplicative_expression --> cast_expression
INFO [Line 25] : additive_expression --> multiplicative_expression
INFO [Line 25] : shift_expression --> additive_expression
INFO [Line 25] : relational_expression --> shift_expression
INFO [Line 25] : equality expression --> relational expression
INFO [Line 25] : and expression --> equality expression
INFO [Line 25] : exclusive or expression --> and expression
INFO [Line 25] : inclusive or expression --> exclusive or expression
INFO [Line 25] : logical and expression --> inclusive or expression
INFO [Line 25] : logical or expression --> logical and expression
INFO [Line 25] : conditional expression --> logical or expression
INFO [Line 25] : assignment expression --> conditional expression
INFO [Line 25] : expression --> assignment expression
INFO [Line 25] : primary-expression --> (expression)
INFO [Line 25] : postfix-expression --> primary_expression
INFO [Line 25] : unary_expression --> postfix_expression
INFO [Line 25] : unary_expression --> sizeof unary_expression
INFO [Line 25] : cast_expression --> unary_expression
INFO [Line 25] : multiplicative_expression --> cast_expression
INFO [Line 25] : primary-expression --> identifier
INFO [Line 25] : postfix-expression --> primary_expression
INFO [Line 25] : primary-expression --> integer constant
INFO [Line 25] : postfix-expression --> primary_expression
INFO [Line 25] : unary_expression --> postfix_expression
INFO [Line 25] : cast_expression --> unary_expression
INFO [Line 25] : multiplicative_expression --> cast_expression
INFO [Line 25] : additive_expression --> multiplicative_expression
INFO [Line 25] : shift_expression --> additive_expression
INFO [Line 25] : relational_expression --> shift_expression
INFO [Line 25] : equality expression --> relational expression
INFO [Line 25] : and expression --> equality expression
INFO [Line 25] : exclusive or expression --> and expression
INFO [Line 25] : inclusive or expression --> exclusive or expression
INFO [Line 25] : logical and expression --> inclusive or expression
INFO [Line 25] : logical or expression --> logical and expression
INFO [Line 25] : conditional expression --> logical or expression
INFO [Line 25] : assignment expression --> conditional expression
INFO [Line 25] : expression --> assignment expression
INFO [Line 25] : postfix-expression --> postfix_expression[expression]
INFO [Line 25] : unary_expression --> postfix_expression
INFO [Line 25] : cast_expression --> unary_expression
INFO [Line 25] : multiplicative_expression --> cast_expression
INFO [Line 25] : additive_expression --> multiplicative_expression
INFO [Line 25] : shift_expression --> additive_expression
INFO [Line 25] : relational_expression --> shift_expression
INFO [Line 25] : equality expression --> relational expression
INFO [Line 25] : and expression --> equality expression
INFO [Line 25] : exclusive or expression --> and expression
INFO [Line 25] : inclusive or expression --> exclusive or expression
INFO [Line 25] : logical and expression --> inclusive or expression
INFO [Line 25] : logical or expression --> logical and expression
INFO [Line 25] : conditional expression --> logical or expression
INFO [Line 25] : assignment expression --> conditional expression
INFO [Line 25] : expression --> assignment expression
INFO [Line 25] : primary-expression --> (expression)
INFO [Line 25] : postfix-expression --> primary_expression
INFO [Line 25] : unary_expression --> postfix_expression
INFO [Line 25] : unary_expression --> sizeof unary_expression
INFO [Line 25] : cast_expression --> unary_expression
INFO [Line 25] : multiplicative expression --> /
INFO [Line 25] : additive_expression --> multiplicative_expression
INFO [Line 25] : shift_expression --> additive_expression
INFO [Line 25] : relational_expression --> shift_expression
INFO [Line 25] : equality expression --> relational expression
INFO [Line 25] : and expression --> equality expression
INFO [Line 25] : exclusive or expression --> and expression
INFO [Line 25] : inclusive or expression --> exclusive or expression
INFO [Line 25] : logical and expression --> inclusive or expression
INFO [Line 25] : logical or expression --> logical and expression
INFO [Line 25] : conditional expression --> logical or expression
INFO [Line 25] : assignment expression --> conditional expression
INFO [Line 25] : initializer --> assignment expression
INFO [Line 25] : init_declarator --> declarator = initializer
INFO [Line 25] : init_declarator_list --> init_declarator
INFO [Line 25] : init_declarator_list_opt --> init_declarator_list
INFO [Line 25] : declaration --> declaration specifiers init_declarator_list_opt
INFO [Line 25] : block item --> declaration
INFO [Line 25] : block item list --> block item list block item

-------- Parsing Line No. 26 --------
INFO [Line 26] : primary-expression --> identifier
INFO [Line 26] : postfix-expression --> primary_expression
INFO [Line 26] : primary-expression --> identifier
INFO [Line 26] : postfix-expression --> primary_expression
INFO [Line 26] : unary_expression --> postfix_expression
INFO [Line 26] : cast_expression --> unary_expression
INFO [Line 26] : multiplicative_expression --> cast_expression
INFO [Line 26] : additive_expression --> multiplicative_expression
INFO [Line 26] : shift_expression --> additive_expression
INFO [Line 26] : relational_expression --> shift_expression
INFO [Line 26] : equality expression --> relational expression
INFO [Line 26] : and expression --> equality expression
INFO [Line 26] : exclusive or expression --> and expression
INFO [Line 26] : inclusive or expression --> exclusive or expression
INFO [Line 26] : logical and expression --> inclusive or expression
INFO [Line 26] : logical or expression --> logical and expression
INFO [Line 26] : conditional expression --> logical or expression
INFO [Line 26] : assignment expression --> conditional expression
INFO [Line 26] : argument_expression_list --> assignment_expression
INFO [Line 26] : primary-expression --> integer constant
INFO [Line 26] : postfix-expression --> primary_expression
INFO [Line 26] : unary_expression --> postfix_expression
INFO [Line 26] : cast_expression --> unary_expression
INFO [Line 26] : multiplicative_expression --> cast_expression
INFO [Line 26] : additive_expression --> multiplicative_expression
INFO [Line 26] : shift_expression --> additive_expression
INFO [Line 26] : relational_expression --> shift_expression
INFO [Line 26] : equality expression --> relational expression
INFO [Line 26] : and expression --> equality expression
INFO [Line 26] : exclusive or expression --> and expression
INFO [Line 26] : inclusive or expression --> exclusive or expression
INFO [Line 26] : logical and expression --> inclusive or expression
INFO [Line 26] : logical or expression --> logical and expression
INFO [Line 26] : conditional expression --> logical or expression
INFO [Line 26] : assignment expression --> conditional expression
INFO [Line 26] : argument_list , expression list
INFO [Line 26] : primary-expression --> identifier
INFO [Line 26] : postfix-expression --> primary_expression
INFO [Line 26] : unary_expression --> postfix_expression
INFO [Line 26] : cast_expression --> unary_expression
INFO [Line 26] : multiplicative_expression --> cast_expression
INFO [Line 26] : additive_expression --> multiplicative_expression
INFO [Line 26] : primary-expression --> integer constant
INFO [Line 26] : postfix-expression --> primary_expression
INFO [Line 26] : unary_expression --> postfix_expression
INFO [Line 26] : cast_expression --> unary_expression
INFO [Line 26] : multiplicative_expression --> cast_expression
INFO [Line 26] : additive expression --> additive expression - multiplicative expression
INFO [Line 26] : shift_expression --> additive_expression
INFO [Line 26] : relational_expression --> shift_expression
INFO [Line 26] : equality expression --> relational expression
INFO [Line 26] : and expression --> equality expression
INFO [Line 26] : exclusive or expression --> and expression
INFO [Line 26] : inclusive or expression --> exclusive or expression
INFO [Line 26] : logical and expression --> inclusive or expression
INFO [Line 26] : logical or expression --> logical and expression
INFO [Line 26] : conditional expression --> logical or expression
INFO [Line 26] : assignment expression --> conditional expression
INFO [Line 26] : argument_list , expression list
INFO [Line 26] : postfix-expression --> postfix_expression(argument_expression_list)
INFO [Line 26] : unary_expression --> postfix_expression
INFO [Line 26] : cast_expression --> unary_expression
INFO [Line 26] : multiplicative_expression --> cast_expression
INFO [Line 26] : additive_expression --> multiplicative_expression
INFO [Line 26] : shift_expression --> additive_expression
INFO [Line 26] : relational_expression --> shift_expression
INFO [Line 26] : equality expression --> relational expression
INFO [Line 26] : and expression --> equality expression
INFO [Line 26] : exclusive or expression --> and expression
INFO [Line 26] : inclusive or expression --> exclusive or expression
INFO [Line 26] : logical and expression --> inclusive or expression
INFO [Line 26] : logical or expression --> logical and expression
INFO [Line 26] : conditional expression --> logical or expression
INFO [Line 26] : assignment expression --> conditional expression
INFO [Line 26] : expression --> assignment expression
INFO [Line 26] : expression_opt --> expression
INFO [Line 26] : expression statement
INFO [Line 26] : statement --> expression statement
INFO [Line 26] : block item --> statement
INFO [Line 26] : block item list --> block item list block item

-------- Parsing Line No. 27 --------
INFO [Line 27] : primary-expression --> identifier
INFO [Line 27] : postfix-expression --> primary_expression
INFO [Line 27] : primary-expression --> string_literal
INFO [Line 27] : postfix-expression --> primary_expression
INFO [Line 27] : unary_expression --> postfix_expression
INFO [Line 27] : cast_expression --> unary_expression
INFO [Line 27] : multiplicative_expression --> cast_expression
INFO [Line 27] : additive_expression --> multiplicative_expression
INFO [Line 27] : shift_expression --> additive_expression
INFO [Line 27] : relational_expression --> shift_expression
INFO [Line 27] : equality expression --> relational expression
INFO [Line 27] : and expression --> equality expression
INFO [Line 27] : exclusive or expression --> and expression
INFO [Line 27] : inclusive or expression --> exclusive or expression
INFO [Line 27] : logical and expression --> inclusive or expression
INFO [Line 27] : logical or expression --> logical and expression
INFO [Line 27] : conditional expression --> logical or expression
INFO [Line 27] : assignment expression --> conditional expression
INFO [Line 27] : argument_expression_list --> assignment_expression
INFO [Line 27] : postfix-expression --> postfix_expression(argument_expression_list)
INFO [Line 27] : unary_expression --> postfix_expression
INFO [Line 27] : cast_expression --> unary_expression
INFO [Line 27] : multiplicative_expression --> cast_expression
INFO [Line 27] : additive_expression --> multiplicative_expression
INFO [Line 27] : shift_expression --> additive_expression
INFO [Line 27] : relational_expression --> shift_expression
INFO [Line 27] : equality expression --> relational expression
INFO [Line 27] : and expression --> equality expression
INFO [Line 27] : exclusive or expression --> and expression
INFO [Line 27] : inclusive or expression --> exclusive or expression
INFO [Line 27] : logical and expression --> inclusive or expression
INFO [Line 27] : logical or expression --> logical and expression
INFO [Line 27] : conditional expression --> logical or expression
INFO [Line 27] : assignment expression --> conditional expression
INFO [Line 27] : expression --> assignment expression
INFO [Line 27] : expression_opt --> expression
INFO [Line 27] : expression statement
INFO [Line 27] : statement --> expression statement
INFO [Line 27] : block item --> statement
INFO [Line 27] : block item list --> block item list block item

-------- Parsing Line No. 28 --------
INFO [Line 28] : primary-expression --> identifier
INFO [Line 28] : postfix-expression --> primary_expression
INFO [Line 28] : primary-expression --> identifier
INFO [Line 28] : postfix-expression --> primary_expression
INFO [Line 28] : unary_expression --> postfix_expression
INFO [Line 28] : cast_expression --> unary_expression
INFO [Line 28] : multiplicative_expression --> cast_expression
INFO [Line 28] : additive_expression --> multiplicative_expression
INFO [Line 28] : shift_expression --> additive_expression
INFO [Line 28] : relational_expression --> shift_expression
INFO [Line 28] : equality expression --> relational expression
INFO [Line 28] : and expression --> equality expression
INFO [Line 28] : exclusive or expression --> and expression
INFO [Line 28] : inclusive or expression --> exclusive or expression
INFO [Line 28] : logical and expression --> inclusive or expression
INFO [Line 28] : logical or expression --> logical and expression
INFO [Line 28] : conditional expression --> logical or expression
INFO [Line 28] : assignment expression --> conditional expression
INFO [Line 28] : argument_expression_list --> assignment_expression
INFO [Line 28] : primary-expression --> identifier
INFO [Line 28] : postfix-expression --> primary_expression
INFO [Line 28] : unary_expression --> postfix_expression
INFO [Line 28] : cast_expression --> unary_expression
INFO [Line 28] : multiplicative_expression --> cast_expression
INFO [Line 28] : additive_expression --> multiplicative_expression
INFO [Line 28] : shift_expression --> additive_expression
INFO [Line 28] : relational_expression --> shift_expression
INFO [Line 28] : equality expression --> relational expression
INFO [Line 28] : and expression --> equality expression
INFO [Line 28] : exclusive or expression --> and expression
INFO [Line 28] : inclusive or expression --> exclusive or expression
INFO [Line 28] : logical and expression --> inclusive or expression
INFO [Line 28] : logical or expression --> logical and expression
INFO [Line 28] : conditional expression --> logical or expression
INFO [Line 28] : assignment expression --> conditional expression
INFO [Line 28] : argument_list , expression list
INFO [Line 28] : postfix-expression --> postfix_expression(argument_expression_list)
INFO [Line 28] : unary_expression --> postfix_expression
INFO [Line 28] : cast_expression --> unary_expression
INFO [Line 28] : multiplicative_expression --> cast_expression
INFO [Line 28] : additive_expression --> multiplicative_expression
INFO [Line 28] : shift_expression --> additive_expression
INFO [Line 28] : relational_expression --> shift_expression
INFO [Line 28] : equality expression --> relational expression
INFO [Line 28] : and expression --> equality expression
INFO [Line 28] : exclusive or expression --> and expression
INFO [Line 28] : inclusive or expression --> exclusive or expression
INFO [Line 28] : logical and expression --> inclusive or expression
INFO [Line 28] : logical or expression --> logical and expression
INFO [Line 28] : conditional expression --> logical or expression
INFO [Line 28] : assignment expression --> conditional expression
INFO [Line 28] : expression --> assignment expression
INFO [Line 28] : expression_opt --> expression
INFO [Line 28] : expression statement
INFO [Line 28] : statement --> expression statement
INFO [Line 28] : block item --> statement
INFO [Line 28] : block item list --> block item list block item

-------- Parsing Line No. 29 --------

-------- Parsing Line No. 30 --------

-------- Parsing Line No. 31 --------
INFO [Line 31] : type specifier --> int
INFO [Line 31] : declaration_specifiers_opt --> epsilon
INFO [Line 31] : declaration_specifiers --> type_specifier declaration_specifiers_opt
INFO [Line 31] : pointer_opt --> epsilon
INFO [Line 31] : direct declarator --> identifier
INFO [Line 31] : declarator --> pointer_opt direct_declarator
INFO [Line 31] : primary-expression --> integer constant
INFO [Line 31] : postfix-expression --> primary_expression
INFO [Line 31] : unary_expression --> postfix_expression
INFO [Line 31] : cast_expression --> unary_expression
INFO [Line 31] : multiplicative_expression --> cast_expression
INFO [Line 31] : additive_expression --> multiplicative_expression
INFO [Line 31] : shift_expression --> additive_expression
INFO [Line 31] : relational_expression --> shift_expression
INFO [Line 31] : equality expression --> relational expression
INFO [Line 31] : and expression --> equality expression
INFO [Line 31] : exclusive or expression --> and expression
INFO [Line 31] : inclusive or expression --> exclusive or expression
INFO [Line 31] : logical and expression --> inclusive or expression
INFO [Line 31] : logical or expression --> logical and expression
INFO [Line 31] : conditional expression --> logical or expression
INFO [Line 31] : assignment expression --> conditional expression
INFO [Line 31] : initializer --> assignment expression
INFO [Line 31] : init_declarator --> declarator = initializer
INFO [Line 31] : init_declarator_list --> init_declarator
INFO [Line 31] : init_declarator_list_opt --> init_declarator_list
INFO [Line 31] : declaration --> declaration specifiers init_declarator_list_opt
INFO [Line 31] : block item --> declaration
INFO [Line 31] : block item list --> block item list block item

-------- Parsing Line No. 32 --------
INFO [Line 32] : primary-expression --> identifier
INFO [Line 32] : postfix-expression --> primary_expression
INFO [Line 32] : postfix-expression --> postfix_expression()
INFO [Line 32] : unary_expression --> postfix_expression
INFO [Line 32] : cast_expression --> unary_expression
INFO [Line 32] : multiplicative_expression --> cast_expression
INFO [Line 32] : additive_expression --> multiplicative_expression
INFO [Line 32] : shift_expression --> additive_expression
INFO [Line 32] : relational_expression --> shift_expression
INFO [Line 32] : equality expression --> relational expression
INFO [Line 32] : and expression --> equality expression
INFO [Line 32] : exclusive or expression --> and expression
INFO [Line 32] : inclusive or expression --> exclusive or expression
INFO [Line 32] : logical and expression --> inclusive or expression
INFO [Line 32] : logical or expression --> logical and expression
INFO [Line 32] : conditional expression --> logical or expression
INFO [Line 32] : assignment expression --> conditional expression
INFO [Line 32] : expression --> assignment expression
INFO [Line 32] : expression_opt --> expression
INFO [Line 32] : expression statement
INFO [Line 32] : statement --> expression statement
INFO [Line 32] : block item --> statement
INFO [Line 32] : block item list --> block item list block item

-------- Parsing Line No. 33 --------
INFO [Line 33] : primary-expression --> identifier
INFO [Line 33] : postfix-expression --> primary_expression
INFO [Line 33] : primary-expression --> string_literal
INFO [Line 33] : postfix-expression --> primary_expression
INFO [Line 33] : unary_expression --> postfix_expression
INFO [Line 33] : cast_expression --> unary_expression
INFO [Line 33] : multiplicative_expression --> cast_expression
INFO [Line 33] : additive_expression --> multiplicative_expression
INFO [Line 33] : shift_expression --> additive_expression
INFO [Line 33] : relational_expression --> shift_expression
INFO [Line 33] : equality expression --> relational expression
INFO [Line 33] : and expression --> equality expression
INFO [Line 33] : exclusive or expression --> and expression
INFO [Line 33] : inclusive or expression --> exclusive or expression
INFO [Line 33] : logical and expression --> inclusive or expression
INFO [Line 33] : logical or expression --> logical and expression
INFO [Line 33] : conditional expression --> logical or expression
INFO [Line 33] : assignment expression --> conditional expression
INFO [Line 33] : argument_expression_list --> assignment_expression
INFO [Line 33] : primary-expression --> identifier
INFO [Line 33] : postfix-expression --> primary_expression
INFO [Line 33] : primary-expression --> identifier
INFO [Line 33] : postfix-expression --> primary_expression
INFO [Line 33] : unary_expression --> postfix_expression
INFO [Line 33] : cast_expression --> unary_expression
INFO [Line 33] : multiplicative_expression --> cast_expression
INFO [Line 33] : additive_expression --> multiplicative_expression
INFO [Line 33] : shift_expression --> additive_expression
INFO [Line 33] : relational_expression --> shift_expression
INFO [Line 33] : equality expression --> relational expression
INFO [Line 33] : and expression --> equality expression
INFO [Line 33] : exclusive or expression --> and expression
INFO [Line 33] : inclusive or expression --> exclusive or expression
INFO [Line 33] : logical and expression --> inclusive or expression
INFO [Line 33] : logical or expression --> logical and expression
INFO [Line 33] : conditional expression --> logical or expression
INFO [Line 33] : assignment expression --> conditional expression
INFO [Line 33] : argument_expression_list --> assignment_expression
INFO [Line 33] : postfix-expression --> postfix_expression(argument_expression_list)
INFO [Line 33] : unary_expression --> postfix_expression
INFO [Line 33] : cast_expression --> unary_expression
INFO [Line 33] : multiplicative_expression --> cast_expression
INFO [Line 33] : additive_expression --> multiplicative_expression
INFO [Line 33] : shift_expression --> additive_expression
INFO [Line 33] : relational_expression --> shift_expression
INFO [Line 33] : equality expression --> relational expression
INFO [Line 33] : and expression --> equality expression
INFO [Line 33] : exclusive or expression --> and expression
INFO [Line 33] : inclusive or expression --> exclusive or expression
INFO [Line 33] : logical and expression --> inclusive or expression
INFO [Line 33] : logical or expression --> logical and expression
INFO [Line 33] : conditional expression --> logical or expression
INFO [Line 33] : assignment expression --> conditional expression
INFO [Line 33] : argument_list , expression list
INFO [Line 33] : postfix-expression --> postfix_expression(argument_expression_list)
INFO [Line 33] : unary_expression --> postfix_expression
INFO [Line 33] : cast_expression --> unary_expression
INFO [Line 33] : multiplicative_expression --> cast_expression
INFO [Line 33] : additive_expression --> multiplicative_expression
INFO [Line 33] : shift_expression --> additive_expression
INFO [Line 33] : relational_expression --> shift_expression
INFO [Line 33] : equality expression --> relational expression
INFO [Line 33] : and expression --> equality expression
INFO [Line 33] : exclusive or expression --> and expression
INFO [Line 33] : inclusive or expression --> exclusive or expression
INFO [Line 33] : logical and expression --> inclusive or expression
INFO [Line 33] : logical or expression --> logical and expression
INFO [Line 33] : conditional expression --> logical or expression
INFO [Line 33] : assignment expression --> conditional expression
INFO [Line 33] : expression --> assignment expression
INFO [Line 33] : expression_opt --> expression
INFO [Line 33] : expression statement
INFO [Line 33] : statement --> expression statement
INFO [Line 33] : block item --> statement
INFO [Line 33] : block item list --> block item list block item

-------- Parsing Line No. 34 --------

-------- Parsing Line No. 35 --------

-------- Parsing Line No. 36 --------

-------- Parsing Line No. 37 --------
INFO [Line 37] : type specifier --> int
INFO [Line 37] : declaration_specifiers_opt --> epsilon
INFO [Line 37] : declaration_specifiers --> type_specifier declaration_specifiers_opt
INFO [Line 37] : pointer_opt --> epsilon
INFO [Line 37] : direct declarator --> identifier
INFO [Line 37] : type_qualifier_list_opt --> epsilon
INFO [Line 37] : assignment_expression_opt --> epsilon
INFO [Line 37] : direct declarator --> direct declarator [type qualifier? assignment expression?]
INFO [Line 37] : declarator --> pointer_opt direct_declarator
INFO [Line 37] : designation_opt --> epsilon
INFO [Line 37] : primary-expression --> integer constant
INFO [Line 37] : postfix-expression --> primary_expression
INFO [Line 37] : unary_expression --> postfix_expression
INFO [Line 37] : cast_expression --> unary_expression
INFO [Line 37] : multiplicative_expression --> cast_expression
INFO [Line 37] : additive_expression --> multiplicative_expression
INFO [Line 37] : shift_expression --> additive_expression
INFO [Line 37] : relational_expression --> shift_expression
INFO [Line 37] : equality expression --> relational expression
INFO [Line 37] : and expression --> equality expression
INFO [Line 37] : exclusive or expression --> and expression
INFO [Line 37] : inclusive or expression --> exclusive or expression
INFO [Line 37] : logical and expression --> inclusive or expression
INFO [Line 37] : logical or expression --> logical and expression
INFO [Line 37] : conditional expression --> logical or expression
INFO [Line 37] : assignment expression --> conditional expression
INFO [Line 37] : initializer --> assignment expression
INFO [Line 37] : initializer list --> designation? initializer
INFO [Line 37] : designation_opt --> epsilon
INFO [Line 37] : primary-expression --> integer constant
INFO [Line 37] : postfix-expression --> primary_expression
INFO [Line 37] : unary_expression --> postfix_expression
INFO [Line 37] : cast_expression --> unary_expression
INFO [Line 37] : multiplicative_expression --> cast_expression
INFO [Line 37] : additive_expression --> multiplicative_expression
INFO [Line 37] : shift_expression --> additive_expression
INFO [Line 37] : relational_expression --> shift_expression
INFO [Line 37] : equality expression --> relational expression
INFO [Line 37] : and expression --> equality expression
INFO [Line 37] : exclusive or expression --> and expression
INFO [Line 37] : inclusive or expression --> exclusive or expression
INFO [Line 37] : logical and expression --> inclusive or expression
INFO [Line 37] : logical or expression --> logical and expression
INFO [Line 37] : conditional expression --> logical or expression
INFO [Line 37] : assignment expression --> conditional expression
INFO [Line 37] : initializer --> assignment expression
INFO [Line 37] : initializer list --> initializer list , designation? initializer
INFO [Line 37] : designation_opt --> epsilon
INFO [Line 37] : primary-expression --> integer constant
INFO [Line 37] : postfix-expression --> primary_expression
INFO [Line 37] : unary_expression --> postfix_expression
INFO [Line 37] : cast_expression --> unary_expression
INFO [Line 37] : multiplicative_expression --> cast_expression
INFO [Line 37] : additive_expression --> multiplicative_expression
INFO [Line 37] : shift_expression --> additive_expression
INFO [Line 37] : relational_expression --> shift_expression
INFO [Line 37] : equality expression --> relational expression
INFO [Line 37] : and expression --> equality expression
INFO [Line 37] : exclusive or expression --> and expression
INFO [Line 37] : inclusive or expression --> exclusive or expression
INFO [Line 37] : logical and expression --> inclusive or expression
INFO [Line 37] : logical or expression --> logical and expression
INFO [Line 37] : conditional expression --> logical or expression
INFO [Line 37] : assignment expression --> conditional expression
INFO [Line 37] : initializer --> assignment expression
INFO [Line 37] : initializer list --> initializer list , designation? initializer
INFO [Line 37] : initializer --> {initializer list}
INFO [Line 37] : init_declarator --> declarator = initializer
INFO [Line 37] : init_declarator_list --> init_declarator
INFO [Line 37] : init_declarator_list_opt --> init_declarator_list
INFO [Line 37] : declaration --> declaration specifiers init_declarator_list_opt
INFO [Line 37] : block item --> declaration
INFO [Line 37] : block item list --> block item list block item

-------- Parsing Line No. 38 --------
INFO [Line 38] : type specifier --> int
INFO [Line 38] : declaration_specifiers_opt --> epsilon
INFO [Line 38] : declaration_specifiers --> type_specifier declaration_specifiers_opt
INFO [Line 38] : pointer_opt --> epsilon
INFO [Line 38] : direct declarator --> identifier
INFO [Line 38] : type_qualifier_list_opt --> epsilon
INFO [Line 38] : assignment_expression_opt --> epsilon
INFO [Line 38] : direct declarator --> direct declarator [type qualifier? assignment expression?]
INFO [Line 38] : declarator --> pointer_opt direct_declarator
INFO [Line 38] : designation_opt --> epsilon
INFO [Line 38] : primary-expression --> integer constant
INFO [Line 38] : postfix-expression --> primary_expression
INFO [Line 38] : unary_expression --> postfix_expression
INFO [Line 38] : cast_expression --> unary_expression
INFO [Line 38] : multiplicative_expression --> cast_expression
INFO [Line 38] : additive_expression --> multiplicative_expression
INFO [Line 38] : shift_expression --> additive_expression
INFO [Line 38] : relational_expression --> shift_expression
INFO [Line 38] : equality expression --> relational expression
INFO [Line 38] : and expression --> equality expression
INFO [Line 38] : exclusive or expression --> and expression
INFO [Line 38] : inclusive or expression --> exclusive or expression
INFO [Line 38] : logical and expression --> inclusive or expression
INFO [Line 38] : logical or expression --> logical and expression
INFO [Line 38] : conditional expression --> logical or expression
INFO [Line 38] : assignment expression --> conditional expression
INFO [Line 38] : initializer --> assignment expression
INFO [Line 38] : initializer list --> designation? initializer
INFO [Line 38] : designation_opt --> epsilon
INFO [Line 38] : primary-expression --> integer constant
INFO [Line 38] : postfix-expression --> primary_expression
INFO [Line 38] : unary_expression --> postfix_expression
INFO [Line 38] : cast_expression --> unary_expression
INFO [Line 38] : multiplicative_expression --> cast_expression
INFO [Line 38] : additive_expression --> multiplicative_expression
INFO [Line 38] : shift_expression --> additive_expression
INFO [Line 38] : relational_expression --> shift_expression
INFO [Line 38] : equality expression --> relational expression
INFO [Line 38] : and expression --> equality expression
INFO [Line 38] : exclusive or expression --> and expression
INFO [Line 38] : inclusive or expression --> exclusive or expression
INFO [Line 38] : logical and expression --> inclusive or expression
INFO [Line 38] : logical or expression --> logical and expression
INFO [Line 38] : conditional expression --> logical or expression
INFO [Line 38] : assignment expression --> conditional expression
INFO [Line 38] : initializer --> assignment expression
INFO [Line 38] : initializer list --> initializer list , designation? initializer
INFO [Line 38] : designation_opt --> epsilon
INFO [Line 38] : primary-expression --> integer constant
INFO [Line 38] : postfix-expression --> primary_expression
INFO [Line 38] : unary_expression --> postfix_expression
INFO [Line 38] : cast_expression --> unary_expression
INFO [Line 38] : multiplicative_expression --> cast_expression
INFO [Line 38] : additive_expression --> multiplicative_expression
INFO [Line 38] : shift_expression --> additive_expression
INFO [Line 38] : relational_expression --> shift_expression
INFO [Line 38] : equality expression --> relational expression
INFO [Line 38] : and expression --> equality expression
INFO [Line 38] : exclusive or expression --> and expression
INFO [Line 38] : inclusive or expression --> exclusive or expression
INFO [Line 38] : logical and expression --> inclusive or expression
INFO [Line 38] : logical or expression --> logical and expression
INFO [Line 38] : conditional expression --> logical or expression
INFO [Line 38] : assignment expression --> conditional expression
INFO [Line 38] : initializer --> assignment expression
INFO [Line 38] : initializer list --> initializer list , designation? initializer
INFO [Line 38] : initializer --> {initializer list}
INFO [Line 38] : init_declarator --> declarator = initializer
INFO [Line 38] : init_declarator_list --> init_declarator
INFO [Line 38] : init_declarator_list_opt --> init_declarator_list
INFO [Line 38] : declaration --> declaration specifiers init_declarator_list_opt
INFO [Line 38] : block item --> declaration
INFO [Line 38] : block item list --> block item list block item

-------- Parsing Line No. 39 --------
INFO [Line 39] : type specifier --> int
INFO [Line 39] : declaration_specifiers_opt --> epsilon
INFO [Line 39] : declaration_specifiers --> type_specifier declaration_specifiers_opt
INFO [Line 39] : pointer_opt --> epsilon
INFO [Line 39] : direct declarator --> identifier
INFO [Line 39] : declarator --> pointer_opt direct_declarator
INFO [Line 39] : primary-expression --> integer constant
INFO [Line 39] : postfix-expression --> primary_expression
INFO [Line 39] : unary_expression --> postfix_expression
INFO [Line 39] : cast_expression --> unary_expression
INFO [Line 39] : multiplicative_expression --> cast_expression
INFO [Line 39] : additive_expression --> multiplicative_expression
INFO [Line 39] : shift_expression --> additive_expression
INFO [Line 39] : relational_expression --> shift_expression
INFO [Line 39] : equality expression --> relational expression
INFO [Line 39] : and expression --> equality expression
INFO [Line 39] : exclusive or expression --> and expression
INFO [Line 39] : inclusive or expression --> exclusive or expression
INFO [Line 39] : logical and expression --> inclusive or expression
INFO [Line 39] : logical or expression --> logical and expression
INFO [Line 39] : conditional expression --> logical or expression
INFO [Line 39] : assignment expression --> conditional expression
INFO [Line 39] : initializer --> assignment expression
INFO [Line 39] : init_declarator --> declarator = initializer
INFO [Line 39] : init_declarator_list --> init_declarator
INFO [Line 39] : init_declarator_list_opt --> init_declarator_list
INFO [Line 39] : declaration --> declaration specifiers init_declarator_list_opt
INFO [Line 39] : block item --> declaration
INFO [Line 39] : block item list --> block item list block item

-------- Parsing Line No. 40 --------
INFO [Line 40] : type specifier --> int
INFO [Line 40] : declaration_specifiers_opt --> epsilon
INFO [Line 40] : declaration_specifiers --> type_specifier declaration_specifiers_opt
INFO [Line 40] : pointer_opt --> epsilon
INFO [Line 40] : direct declarator --> identifier
INFO [Line 40] : declarator --> pointer_opt direct_declarator
INFO [Line 40] : primary-expression --> identifier
INFO [Line 40] : postfix-expression --> primary_expression
INFO [Line 40] : unary_expression --> postfix_expression
INFO [Line 40] : cast_expression --> unary_expression
INFO [Line 40] : multiplicative_expression --> cast_expression
INFO [Line 40] : additive_expression --> multiplicative_expression
INFO [Line 40] : shift_expression --> additive_expression
INFO [Line 40] : relational_expression --> shift_expression
INFO [Line 40] : equality expression --> relational expression
INFO [Line 40] : and expression --> equality expression
INFO [Line 40] : exclusive or expression --> and expression
INFO [Line 40] : inclusive or expression --> exclusive or expression
INFO [Line 40] : logical and expression --> inclusive or expression
INFO [Line 40] : logical or expression --> logical and expression
INFO [Line 40] : conditional expression --> logical or expression
INFO [Line 40] : assignment expression --> conditional expression
INFO [Line 40] : expression --> assignment expression
INFO [Line 40] : primary-expression --> (expression)
INFO [Line 40] : postfix-expression --> primary_expression
INFO [Line 40] : unary_expression --> postfix_expression
INFO [Line 40] : unary_expression --> sizeof unary_expression
INFO [Line 40] : cast_expression --> unary_expression
INFO [Line 40] : multiplicative_expression --> cast_expression
INFO [Line 40] : primary-expression --> identifier
INFO [Line 40] : postfix-expression --> primary_expression
INFO [Line 40] : primary-expression --> integer constant
INFO [Line 40] : postfix-expression --> primary_expression
INFO [Line 40] : unary_expression --> postfix_expression
INFO [Line 40] : cast_expression --> unary_expression
INFO [Line 40] : multiplicative_expression --> cast_expression
INFO [Line 40] : additive_expression --> multiplicative_expression
INFO [Line 40] : shift_expression --> additive_expression
INFO [Line 40] : relational_expression --> shift_expression
INFO [Line 40] : equality expression --> relational expression
INFO [Line 40] : and expression --> equality expression
INFO [Line 40] : exclusive or expression --> and expression
INFO [Line 40] : inclusive or expression --> exclusive or expression
INFO [Line 40] : logical and expression --> inclusive or expression
INFO [Line 40] : logical or expression --> logical and expression
INFO [Line 40] : conditional expression --> logical or expression
INFO [Line 40] : assignment expression --> conditional expression
INFO [Line 40] : expression --> assignment expression
INFO [Line 40] : postfix-expression --> postfix_expression[expression]
INFO [Line 40] : unary_expression --> postfix_expression
INFO [Line 40] : cast_expression --> unary_expression
INFO [Line 40] : multiplicative_expression --> cast_expression
INFO [Line 40] : additive_expression --> multiplicative_expression
INFO [Line 40] : shift_expression --> additive_expression
INFO [Line 40] : relational_expression --> shift_expression
INFO [Line 40] : equality expression --> relational expression
INFO [Line 40] : and expression --> equality expression
INFO [Line 40] : exclusive or expression --> and expression
INFO [Line 40] : inclusive or expression --> exclusive or expression
INFO [Line 40] : logical and expression --> inclusive or expression
INFO [Line 40] : logical or expression --> logical and expression
INFO [Line 40] : conditional expression --> logical or expression
INFO [Line 40] : assignment expression --> conditional expression
INFO [Line 40] : expression --> assignment expression
INFO [Line 40] : primary-expression --> (expression)
INFO [Line 40] : postfix-expression --> primary_expression
INFO [Line 40] : unary_expression --> postfix_expression
INFO [Line 40] : unary_expression --> sizeof unary_expression
INFO [Line 40] : cast_expression --> unary_expression
INFO [Line 40] : multiplicative expression --> /
INFO [Line 40] : additive_expression --> multiplicative_expression
INFO [Line 40] : shift_expression --> additive_expression
INFO [Line 40] : relational_expression --> shift_expression
INFO [Line 40] : equality expression --> relational expression
INFO [Line 40] : and expression --> equality expression
INFO [Line 40] : exclusive or expression --> and expression
INFO [Line 40] : inclusive or expression --> exclusive or expression
INFO [Line 40] : logical and expression --> inclusive or expression
INFO [Line 40] : logical or expression --> logical and expression
INFO [Line 40] : conditional expression --> logical or expression
INFO [Line 40] : assignment expression --> conditional expression
INFO [Line 40] : initializer --> assignment expression
INFO [Line 40] : init_declarator --> declarator = initializer
INFO [Line 40] : init_declarator_list --> init_declarator
INFO [Line 40] : init_declarator_list_opt --> init_declarator_list
INFO [Line 40] : declaration --> declaration specifiers init_declarator_list_opt
INFO [Line 40] : block item --> declaration
INFO [Line 40] : block item list --> block item list block item

-------- Parsing Line No. 41 --------
INFO [Line 41] : primary-expression --> identifier
INFO [Line 41] : postfix-expression --> primary_expression
INFO [Line 41] : primary-expression --> string_literal
INFO [Line 41] : postfix-expression --> primary_expression
INFO [Line 41] : unary_expression --> postfix_expression
INFO [Line 41] : cast_expression --> unary_expression
INFO [Line 41] : multiplicative_expression --> cast_expression
INFO [Line 41] : additive_expression --> multiplicative_expression
INFO [Line 41] : shift_expression --> additive_expression
INFO [Line 41] : relational_expression --> shift_expression
INFO [Line 41] : equality expression --> relational expression
INFO [Line 41] : and expression --> equality expression
INFO [Line 41] : exclusive or expression --> and expression
INFO [Line 41] : inclusive or expression --> exclusive or expression
INFO [Line 41] : logical and expression --> inclusive or expression
INFO [Line 41] : logical or expression --> logical and expression
INFO [Line 41] : conditional expression --> logical or expression
INFO [Line 41] : assignment expression --> conditional expression
INFO [Line 41] : argument_expression_list --> assignment_expression
INFO [Line 41] : primary-expression --> identifier
INFO [Line 41] : postfix-expression --> primary_expression
INFO [Line 41] : primary-expression --> identifier
INFO [Line 41] : postfix-expression --> primary_expression
INFO [Line 41] : unary_expression --> postfix_expression
INFO [Line 41] : cast_expression --> unary_expression
INFO [Line 41] : multiplicative_expression --> cast_expression
INFO [Line 41] : additive_expression --> multiplicative_expression
INFO [Line 41] : shift_expression --> additive_expression
INFO [Line 41] : relational_expression --> shift_expression
INFO [Line 41] : equality expression --> relational expression
INFO [Line 41] : and expression --> equality expression
INFO [Line 41] : exclusive or expression --> and expression
INFO [Line 41] : inclusive or expression --> exclusive or expression
INFO [Line 41] : logical and expression --> inclusive or expression
INFO [Line 41] : logical or expression --> logical and expression
INFO [Line 41] : conditional expression --> logical or expression
INFO [Line 41] : assignment expression --> conditional expression
INFO [Line 41] : argument_expression_list --> assignment_expression
INFO [Line 41] : primary-expression --> identifier
INFO [Line 41] : postfix-expression --> primary_expression
INFO [Line 41] : unary_expression --> postfix_expression
INFO [Line 41] : cast_expression --> unary_expression
INFO [Line 41] : multiplicative_expression --> cast_expression
INFO [Line 41] : additive_expression --> multiplicative_expression
INFO [Line 41] : shift_expression --> additive_expression
INFO [Line 41] : relational_expression --> shift_expression
INFO [Line 41] : equality expression --> relational expression
INFO [Line 41] : and expression --> equality expression
INFO [Line 41] : exclusive or expression --> and expression
INFO [Line 41] : inclusive or expression --> exclusive or expression
INFO [Line 41] : logical and expression --> inclusive or expression
INFO [Line 41] : logical or expression --> logical and expression
INFO [Line 41] : conditional expression --> logical or expression
INFO [Line 41] : assignment expression --> conditional expression
INFO [Line 41] : argument_list , expression list
INFO [Line 41] : primary-expression --> identifier
INFO [Line 41] : postfix-expression --> primary_expression
INFO [Line 41] : unary_expression --> postfix_expression
INFO [Line 41] : cast_expression --> unary_expression
INFO [Line 41] : multiplicative_expression --> cast_expression
INFO [Line 41] : additive_expression --> multiplicative_expression
INFO [Line 41] : shift_expression --> additive_expression
INFO [Line 41] : relational_expression --> shift_expression
INFO [Line 41] : equality expression --> relational expression
INFO [Line 41] : and expression --> equality expression
INFO [Line 41] : exclusive or expression --> and expression
INFO [Line 41] : inclusive or expression --> exclusive or expression
INFO [Line 41] : logical and expression --> inclusive or expression
INFO [Line 41] : logical or expression --> logical and expression
INFO [Line 41] : conditional expression --> logical or expression
INFO [Line 41] : assignment expression --> conditional expression
INFO [Line 41] : argument_list , expression list
INFO [Line 41] : primary-expression --> identifier
INFO [Line 41] : postfix-expression --> primary_expression
INFO [Line 41] : unary_expression --> postfix_expression
INFO [Line 41] : cast_expression --> unary_expression
INFO [Line 41] : multiplicative_expression --> cast_expression
INFO [Line 41] : additive_expression --> multiplicative_expression
INFO [Line 41] : shift_expression --> additive_expression
INFO [Line 41] : relational_expression --> shift_expression
INFO [Line 41] : equality expression --> relational expression
INFO [Line 41] : and expression --> equality expression
INFO [Line 41] : exclusive or expression --> and expression
INFO [Line 41] : inclusive or expression --> exclusive or expression
INFO [Line 41] : logical and expression --> inclusive or expression
INFO [Line 41] : logical or expression --> logical and expression
INFO [Line 41] : conditional expression --> logical or expression
INFO [Line 41] : assignment expression --> conditional expression
INFO [Line 41] : argument_list , expression list
INFO [Line 41] : postfix-expression --> postfix_expression(argument_expression_list)
INFO [Line 41] : unary_expression --> postfix_expression
INFO [Line 41] : cast_expression --> unary_expression
INFO [Line 41] : multiplicative_expression --> cast_expression
INFO [Line 41] : additive_expression --> multiplicative_expression
INFO [Line 41] : shift_expression --> additive_expression
INFO [Line 41] : relational_expression --> shift_expression
INFO [Line 41] : equality expression --> relational expression
INFO [Line 41] : and expression --> equality expression
INFO [Line 41] : exclusive or expression --> and expression
INFO [Line 41] : inclusive or expression --> exclusive or expression
INFO [Line 41] : logical and expression --> inclusive or expression
INFO [Line 41] : logical or expression --> logical and expression
INFO [Line 41] : conditional expression --> logical or expression
INFO [Line 41] : assignment expression --> conditional expression
INFO [Line 41] : argument_list , expression list
INFO [Line 41] : postfix-expression --> postfix_expression(argument_expression_list)
INFO [Line 41] : unary_expression --> postfix_expression
INFO [Line 41] : cast_expression --> unary_expression
INFO [Line 41] : multiplicative_expression --> cast_expression
INFO [Line 41] : additive_expression --> multiplicative_expression
INFO [Line 41] : shift_expression --> additive_expression
INFO [Line 41] : relational_expression --> shift_expression
INFO [Line 41] : equality expression --> relational expression
INFO [Line 41] : and expression --> equality expression
INFO [Line 41] : exclusive or expression --> and expression
INFO [Line 41] : inclusive or expression --> exclusive or expression
INFO [Line 41] : logical and expression --> inclusive or expression
INFO [Line 41] : logical or expression --> logical and expression
INFO [Line 41] : conditional expression --> logical or expression
INFO [Line 41] : assignment expression --> conditional expression
INFO [Line 41] : expression --> assignment expression
INFO [Line 41] : expression_opt --> expression
INFO [Line 41] : expression statement
INFO [Line 41] : statement --> expression statement
INFO [Line 41] : block item --> statement
INFO [Line 41] : block item list --> block item list block item

-------- Parsing Line No. 42 --------

-------- Parsing Line No. 43 --------

-------- Parsing Line No. 44 --------
INFO [Line 44] : type specifier --> int
INFO [Line 44] : declaration_specifiers_opt --> epsilon
INFO [Line 44] : declaration_specifiers --> type_specifier declaration_specifiers_opt
INFO [Line 44] : pointer_opt --> epsilon
INFO [Line 44] : direct declarator --> identifier
INFO [Line 44] : declarator --> pointer_opt direct_declarator
INFO [Line 44] : primary-expression --> integer constant
INFO [Line 44] : postfix-expression --> primary_expression
INFO [Line 44] : unary_expression --> postfix_expression
INFO [Line 44] : cast_expression --> unary_expression
INFO [Line 44] : multiplicative_expression --> cast_expression
INFO [Line 44] : additive_expression --> multiplicative_expression
INFO [Line 44] : shift_expression --> additive_expression
INFO [Line 44] : relational_expression --> shift_expression
INFO [Line 44] : equality expression --> relational expression
INFO [Line 44] : and expression --> equality expression
INFO [Line 44] : exclusive or expression --> and expression
INFO [Line 44] : inclusive or expression --> exclusive or expression
INFO [Line 44] : logical and expression --> inclusive or expression
INFO [Line 44] : logical or expression --> logical and expression
INFO [Line 44] : conditional expression --> logical or expression
INFO [Line 44] : assignment expression --> conditional expression
INFO [Line 44] : initializer --> assignment expression
INFO [Line 44] : init_declarator --> declarator = initializer
INFO [Line 44] : init_declarator_list --> init_declarator
INFO [Line 44] : pointer_opt --> epsilon
INFO [Line 44] : direct declarator --> identifier
INFO [Line 44] : declarator --> pointer_opt direct_declarator
INFO [Line 44] : init_declarator --> declarator
INFO [Line 44] : init_declarator_list --> init_declarator_list , init_declarator
INFO [Line 44] : pointer_opt --> epsilon
INFO [Line 44] : direct declarator --> identifier
INFO [Line 44] : declarator --> pointer_opt direct_declarator
INFO [Line 44] : init_declarator --> declarator
INFO [Line 44] : init_declarator_list --> init_declarator_list , init_declarator
INFO [Line 44] : init_declarator_list_opt --> init_declarator_list
INFO [Line 44] : declaration --> declaration specifiers init_declarator_list_opt
INFO [Line 44] : block item --> declaration
INFO [Line 44] : block item list --> block item list block item

-------- Parsing Line No. 45 --------
INFO [Line 45] : primary-expression --> identifier
INFO [Line 45] : postfix-expression --> primary_expression
INFO [Line 45] : primary-expression --> string_literal
INFO [Line 45] : postfix-expression --> primary_expression
INFO [Line 45] : unary_expression --> postfix_expression
INFO [Line 45] : cast_expression --> unary_expression
INFO [Line 45] : multiplicative_expression --> cast_expression
INFO [Line 45] : additive_expression --> multiplicative_expression
INFO [Line 45] : shift_expression --> additive_expression
INFO [Line 45] : relational_expression --> shift_expression
INFO [Line 45] : equality expression --> relational expression
INFO [Line 45] : and expression --> equality expression
INFO [Line 45] : exclusive or expression --> and expression
INFO [Line 45] : inclusive or expression --> exclusive or expression
INFO [Line 45] : logical and expression --> inclusive or expression
INFO [Line 45] : logical or expression --> logical and expression
INFO [Line 45] : conditional expression --> logical or expression
INFO [Line 45] : assignment expression --> conditional expression
INFO [Line 45] : argument_expression_list --> assignment_expression
INFO [Line 45] : postfix-expression --> postfix_expression(argument_expression_list)
INFO [Line 45] : unary_expression --> postfix_expression
INFO [Line 45] : cast_expression --> unary_expression
INFO [Line 45] : multiplicative_expression --> cast_expression
INFO [Line 45] : additive_expression --> multiplicative_expression
INFO [Line 45] : shift_expression --> additive_expression
INFO [Line 45] : relational_expression --> shift_expression
INFO [Line 45] : equality expression --> relational expression
INFO [Line 45] : and expression --> equality expression
INFO [Line 45] : exclusive or expression --> and expression
INFO [Line 45] : inclusive or expression --> exclusive or expression
INFO [Line 45] : logical and expression --> inclusive or expression
INFO [Line 45] : logical or expression --> logical and expression
INFO [Line 45] : conditional expression --> logical or expression
INFO [Line 45] : assignment expression --> conditional expression
INFO [Line 45] : expression --> assignment expression
INFO [Line 45] : expression_opt --> expression
INFO [Line 45] : expression statement
INFO [Line 45] : statement --> expression statement
INFO [Line 45] : block item --> statement
INFO [Line 45] : block item list --> block item list block item

-------- Parsing Line No. 46 --------
INFO [Line 46] : primary-expression --> identifier
INFO [Line 46] : postfix-expression --> primary_expression
INFO [Line 46] : primary-expression --> string_literal
INFO [Line 46] : postfix-expression --> primary_expression
INFO [Line 46] : unary_expression --> postfix_expression
INFO [Line 46] : cast_expression --> unary_expression
INFO [Line 46] : multiplicative_expression --> cast_expression
INFO [Line 46] : additive_expression --> multiplicative_expression
INFO [Line 46] : shift_expression --> additive_expression
INFO [Line 46] : relational_expression --> shift_expression
INFO [Line 46] : equality expression --> relational expression
INFO [Line 46] : and expression --> equality expression
INFO [Line 46] : exclusive or expression --> and expression
INFO [Line 46] : inclusive or expression --> exclusive or expression
INFO [Line 46] : logical and expression --> inclusive or expression
INFO [Line 46] : logical or expression --> logical and expression
INFO [Line 46] : conditional expression --> logical or expression
INFO [Line 46] : assignment expression --> conditional expression
INFO [Line 46] : argument_expression_list --> assignment_expression
INFO [Line 46] : unary operator -> &
INFO [Line 46] : primary-expression --> identifier
INFO [Line 46] : postfix-expression --> primary_expression
INFO [Line 46] : unary_expression --> postfix_expression
INFO [Line 46] : cast_expression --> unary_expression
INFO [Line 46] : unary_expression --> unary_operator cast_expression
INFO [Line 46] : cast_expression --> unary_expression
INFO [Line 46] : multiplicative_expression --> cast_expression
INFO [Line 46] : additive_expression --> multiplicative_expression
INFO [Line 46] : shift_expression --> additive_expression
INFO [Line 46] : relational_expression --> shift_expression
INFO [Line 46] : equality expression --> relational expression
INFO [Line 46] : and expression --> equality expression
INFO [Line 46] : exclusive or expression --> and expression
INFO [Line 46] : inclusive or expression --> exclusive or expression
INFO [Line 46] : logical and expression --> inclusive or expression
INFO [Line 46] : logical or expression --> logical and expression
INFO [Line 46] : conditional expression --> logical or expression
INFO [Line 46] : assignment expression --> conditional expression
INFO [Line 46] : argument_list , expression list
INFO [Line 46] : unary operator -> &
INFO [Line 46] : primary-expression --> identifier
INFO [Line 46] : postfix-expression --> primary_expression
INFO [Line 46] : unary_expression --> postfix_expression
INFO [Line 46] : cast_expression --> unary_expression
INFO [Line 46] : unary_expression --> unary_operator cast_expression
INFO [Line 46] : cast_expression --> unary_expression
INFO [Line 46] : multiplicative_expression --> cast_expression
INFO [Line 46] : additive_expression --> multiplicative_expression
INFO [Line 46] : shift_expression --> additive_expression
INFO [Line 46] : relational_expression --> shift_expression
INFO [Line 46] : equality expression --> relational expression
INFO [Line 46] : and expression --> equality expression
INFO [Line 46] : exclusive or expression --> and expression
INFO [Line 46] : inclusive or expression --> exclusive or expression
INFO [Line 46] : logical and expression --> inclusive or expression
INFO [Line 46] : logical or expression --> logical and expression
INFO [Line 46] : conditional expression --> logical or expression
INFO [Line 46] : assignment expression --> conditional expression
INFO [Line 46] : argument_list , expression list
INFO [Line 46] : postfix-expression --> postfix_expression(argument_expression_list)
INFO [Line 46] : unary_expression --> postfix_expression
INFO [Line 46] : cast_expression --> unary_expression
INFO [Line 46] : multiplicative_expression --> cast_expression
INFO [Line 46] : additive_expression --> multiplicative_expression
INFO [Line 46] : shift_expression --> additive_expression
INFO [Line 46] : relational_expression --> shift_expression
INFO [Line 46] : equality expression --> relational expression
INFO [Line 46] : and expression --> equality expression
INFO [Line 46] : exclusive or expression --> and expression
INFO [Line 46] : inclusive or expression --> exclusive or expression
INFO [Line 46] : logical and expression --> inclusive or expression
INFO [Line 46] : logical or expression --> logical and expression
INFO [Line 46] : conditional expression --> logical or expression
INFO [Line 46] : assignment expression --> conditional expression
INFO [Line 46] : expression --> assignment expression
INFO [Line 46] : expression_opt --> expression
INFO [Line 46] : expression statement
INFO [Line 46] : statement --> expression statement
INFO [Line 46] : block item --> statement
INFO [Line 46] : block item list --> block item list block item

-------- Parsing Line No. 47 --------
INFO [Line 47] : primary-expression --> identifier
INFO [Line 47] : postfix-expression --> primary_expression
INFO [Line 47] : primary-expression --> string_literal
INFO [Line 47] : postfix-expression --> primary_expression
INFO [Line 47] : unary_expression --> postfix_expression
INFO [Line 47] : cast_expression --> unary_expression
INFO [Line 47] : multiplicative_expression --> cast_expression
INFO [Line 47] : additive_expression --> multiplicative_expression
INFO [Line 47] : shift_expression --> additive_expression
INFO [Line 47] : relational_expression --> shift_expression
INFO [Line 47] : equality expression --> relational expression
INFO [Line 47] : and expression --> equality expression
INFO [Line 47] : exclusive or expression --> and expression
INFO [Line 47] : inclusive or expression --> exclusive or expression
INFO [Line 47] : logical and expression --> inclusive or expression
INFO [Line 47] : logical or expression --> logical and expression
INFO [Line 47] : conditional expression --> logical or expression
INFO [Line 47] : assignment expression --> conditional expression
INFO [Line 47] : argument_expression_list --> assignment_expression
INFO [Line 47] : primary-expression --> identifier
INFO [Line 47] : postfix-expression --> primary_expression
INFO [Line 47] : unary_expression --> postfix_expression
INFO [Line 47] : cast_expression --> unary_expression
INFO [Line 47] : multiplicative_expression --> cast_expression
INFO [Line 47] : primary-expression --> identifier
INFO [Line 47] : postfix-expression --> primary_expression
INFO [Line 47] : unary_expression --> postfix_expression
INFO [Line 47] : cast_expression --> unary_expression
INFO [Line 47] : multiplicative expression --> *
INFO [Line 47] : additive_expression --> multiplicative_expression
INFO [Line 47] : shift_expression --> additive_expression
INFO [Line 47] : relational_expression --> shift_expression
INFO [Line 47] : equality expression --> relational expression
INFO [Line 47] : and expression --> equality expression
INFO [Line 47] : exclusive or expression --> and expression
INFO [Line 47] : inclusive or expression --> exclusive or expression
INFO [Line 47] : logical and expression --> inclusive or expression
INFO [Line 47] : logical or expression --> logical and expression
INFO [Line 47] : conditional expression --> logical or expression
INFO [Line 47] : assignment expression --> conditional expression
INFO [Line 47] : argument_list , expression list
INFO [Line 47] : postfix-expression --> postfix_expression(argument_expression_list)
INFO [Line 47] : unary_expression --> postfix_expression
INFO [Line 47] : cast_expression --> unary_expression
INFO [Line 47] : multiplicative_expression --> cast_expression
INFO [Line 47] : additive_expression --> multiplicative_expression
INFO [Line 47] : shift_expression --> additive_expression
INFO [Line 47] : relational_expression --> shift_expression
INFO [Line 47] : equality expression --> relational expression
INFO [Line 47] : and expression --> equality expression
INFO [Line 47] : exclusive or expression --> and expression
INFO [Line 47] : inclusive or expression --> exclusive or expression
INFO [Line 47] : logical and expression --> inclusive or expression
INFO [Line 47] : logical or expression --> logical and expression
INFO [Line 47] : conditional expression --> logical or expression
INFO [Line 47] : assignment expression --> conditional expression
INFO [Line 47] : expression --> assignment expression
INFO [Line 47] : expression_opt --> expression
INFO [Line 47] : expression statement
INFO [Line 47] : statement --> expression statement
INFO [Line 47] : block item --> statement
INFO [Line 47] : block item list --> block item list block item

-------- Parsing Line No. 48 --------
INFO [Line 48] : expression_opt --> epsilon
INFO [Line 48] : jump statement --> return expression?
INFO [Line 48] : statement --> jump statement
INFO [Line 48] : block item --> statement
INFO [Line 48] : block item list --> block item list block item

-------- Parsing Line No. 49 --------
INFO [Line 49] : block_item_list_opt --> block_item_list
INFO [Line 49] : compound statement --> {block item list?}
INFO [Line 49] : function definition --> declaration specifiers declarator declaration list? compound statement
INFO [Line 49] : external declaration --> function definition
INFO [Line 49] : translation unit --> external declaration
